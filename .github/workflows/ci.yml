name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Build
      run: go build -v ./...
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run static analysis
      uses: dominikh/staticcheck-action@v1.3.0
      with:
        version: "latest"
        install-go: false
    
    - name: Check formatting
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "The following files are not formatted:"
          gofmt -s -l .
          exit 1
        fi

  build-and-test-docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        cat > Dockerfile << 'EOF'
        FROM golang:1.23-alpine AS builder
        WORKDIR /app
        COPY go.mod ./
        COPY go.sum* ./
        RUN go mod download
        COPY . .
        RUN go build -o calculator .
        
        FROM alpine:latest
        RUN apk --no-cache add ca-certificates
        WORKDIR /app
        COPY --from=builder /app/calculator .
        COPY --from=builder /app/templates ./templates
        COPY --from=builder /app/static ./static
        EXPOSE 8080
        CMD ["./calculator"]
        EOF
        docker build -t calculator:test .
    
    - name: Test Docker container
      run: |
        docker run -d -p 8080:8080 --name calculator-test calculator:test
        sleep 5
        curl -f http://localhost:8080 || exit 1
        docker stop calculator-test